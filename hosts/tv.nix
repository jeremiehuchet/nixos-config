# Edit this configuration file to define what should be installed on
# your system.  Help is available in the configuration.nix(5) man page
# and in the NixOS manual (accessible by running ‘nixos-help’).

{ config, pkgs, ... }:

{
  imports =
    [ ./tv/hardware-configuration.nix ./common ../home ../custom-pkgs ];

  i18n.defaultLocale = "fr_FR.UTF-8";

  boot.supportedFilesystems = [ "nfs" ];

  hardware.fancontrol.enable = true;
  hardware.fancontrol.config = ''
    # Configuration file generated by pwmconfig, changes will be lost
    INTERVAL=10
    DEVPATH=hwmon2= hwmon3=devices/platform/coretemp.0
    DEVNAME=hwmon2=dell_smm hwmon3=coretemp
    FCTEMPS=hwmon2/pwm1=hwmon3/temp1_input
    FCFANS= hwmon2/pwm1=hwmon2/fan1_input
    MINTEMP=hwmon2/pwm1=55
    MAXTEMP=hwmon2/pwm1=65
    MINSTART=hwmon2/pwm1=75
    MINSTOP=hwmon2/pwm1=60
  '';

  services.autofs = {
    enable = true;
    autoMaster = let
      nasMapConf = pkgs.writeText "nas-auto" ''
        films  -rw,soft,intr nas:/mnt/md1/films
        music  -rw,soft,intr nas:/mnt/md1/music
        series -rw,soft,intr nas:/mnt/md1/series
        photos -rw,soft,intr nas:/mnt/md1/photos
      '';
    in ''
      /nas file:${nasMapConf} --timeout 30
    '';
  };

  systemd.network.links."10-wireless" = {
    matchConfig.MACAddress = "f4:b7:e2:4b:d8:b7";
    linkConfig.Name = "wireless";
  };
  systemd.network.links."10-ethernet" = {
    matchConfig.MACAddress = "b8:ca:3a:c8:30:f1";
    linkConfig.Name = "ethernet";
  };

  networking.hostName = "tv";
  networking.enableIPv6 = false;
  networking.wireless.enable = true;
  networking.wireless.interfaces = [ "wireless" ];
  networking.wireless.networks."L'internet de J".psk =
    (import ../secrets.nix).wireless.psk;
  networking.interfaces.ethernet.useDHCP = true;
  networking.interfaces.wireless.useDHCP = true;

  environment.systemPackages = with pkgs; [
    acpitool
    gnupg
    lm_sensors
    pass
    git
    kodi
    nfs-utils
  ];

  services.openssh.enable = true;

  services.udev.extraRules = ''
    # wake on usb
    ACTION=="add", SUBSYSTEM=="usb", DRIVERS=="usbhid", ATTR{../power/wakeup}="enabled"
  '';

  sound.enable = true;
  sound.extraConfig = ''
    pcm.analog {
      type hw
      card 0
      device 0
    }
    pcm.hdmi0 {
      type hw
      card 0
      device 3
    }
    pcm.!default {
      type  plug
      slave.pcm "hdmi0"
    }
  '';

  hardware.bluetooth.enable = true;
  hardware.bluetooth.package = pkgs.bluezFull;
  services.blueman.enable = true;

  services.xserver.libinput.enable = true;

  services.logind = {
    lidSwitch = "ignore";
    lidSwitchDocked = "ignore";
    lidSwitchExternalPower = "ignore";
    extraConfig = ''
      IdleAction=suspend
      IdleActionSec=60
    '';
  };

  services.transmission = {
    enable = true;
    user = "guest";
    group = "users";
    settings = {
      download-dir = "/home/guest/torrent/finished";
      incomplete-dir = "/home/guest/torrent/incomplete";
      incomplete-dir-enabled = true;
    };
  };

  services.sonarr = {
    enable = true;
    user = "guest";
    group = "users";
  };

  services.bazarr.enable = true;

  users.users.guest = {
    isNormalUser = true;
    extraGroups = [ "video" "wheel" ];
  };

  users.users.git = {
    isNormalUser = true;
    openssh.authorizedKeys.keyFiles = [
      ../identities/id_rsa_laptop.pub
      ../identities/id_rsa_oneplus.pub
      ../identities/id_rsa_tv.pub
    ];
  };

  custom = {
    dpi = 128;
    xserver.autoLogin = "guest";
    xserver.primaryOutput = "HDMI-1";
    home.root.cliTools.enable = true;
    home.guest.cliTools.enable = true;
    home.guest.guiTools.enable = true;
    home.guest.guiTools.autoLock = false;
    home.guest.guiTools.i3statusRustConfig = ./tv/i3status-rust.toml;
  };

  services.cron = {
    enable = true;
    systemCronJobs = [
      "0 4 * * * guest git -C /etc/nixos pull --rebase"
    ];
  };

  system.autoUpgrade.enable = true;
  system.autoUpgrade.allowReboot = true;

  system.stateVersion = "21.05";
}

